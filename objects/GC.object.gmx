<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//contador de enemigos
global.enemyCount = 0;
//maximo de enemigos
enemyMax = 4;
enemyTotal = 100;

//obtiene los dos puntos de spawneo
for(i = 0;i&lt;instance_number(objEnemySpawn);i+=1){
    enemySpawn[i] = instance_find(objEnemySpawn,i);
}

//contador de frames
cnt = 0;
time = 0;
//tasa de spawneo de enemigos
spawnTime = room_speed*1.5;
type2 = false;


debug = true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(enemyTotal &gt; 0){
    //si se pueden generar mas enemigos, genera uno en el tiempo indicado de spawneo
    //le asigna la misma escala x del punto de spawneo y se la aplica a la velocidad
    if(global.enemyCount &lt; enemyMax &amp;&amp; cnt%spawnTime==0){
        rndSide = random(1);
        if(rndSide &gt; 0.7 &amp;&amp; enemySpawn[0].move){
        //Genera de ambos lados
            for(i = 0;i&lt;array_length_1d(enemySpawn);i+=1){
                with(enemySpawn[i]){
                    with(instance_create(x,y,objEnemyTest)){
                        image_xscale = other.image_xscale;
                        move *= image_xscale;
                    }
                }
            }
        }
        else if(rndSide &lt; 0.2 &amp;&amp; type2 == false){
            //Genera de un lado al azar
            rnd = irandom(array_length_1d(enemySpawn)-1);
            startMarker = instance_find(objStartMarker,0);
            endMarker = instance_find(objEndMarker,0);
            player = instance_find(objPlayer,0);
            if((enemySpawn[rnd].start &amp;&amp; player.x &lt; startMarker.x) || !enemySpawn[rnd].start &amp;&amp; player.x &gt; endMarker.x){
                with(enemySpawn[rnd]){
                    with(instance_create(x,y,objEnemy2Test)){
                        image_xscale = other.image_xscale;
                        move *= image_xscale;
                    }
                }
            }
        }
        else{
            //Genera de un lado al azar
            rnd = irandom(array_length_1d(enemySpawn)-1);
            startMarker = instance_find(objStartMarker,0);
            endMarker = instance_find(objEndMarker,0);
            player = instance_find(objPlayer,0);
            if((enemySpawn[rnd].start &amp;&amp; player.x &lt; startMarker.x) || !enemySpawn[rnd].start &amp;&amp; player.x &gt; endMarker.x){
                with(enemySpawn[rnd]){
                    with(instance_create(x,y,objEnemyTest)){
                        image_xscale = other.image_xscale;
                        move *= image_xscale;
                    }
                }
            }
        }
    }
}

//suma cada frame
cnt += 1;

if(cnt%60==0){
    time += 1;
}

rndOld = rndSide;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();

if(debug){
    draw_set_font(fntTest);
    draw_set_colour(c_white);
    with(objPlayer){
        draw_text(other.x,other.y,"Time: "+string(other.time));
        draw_text(other.x,other.y+12,"Enemies left: "+string(other.enemyTotal));
        draw_text(other.x,other.y+24,"Hit: "+string(hit));
        draw_text(other.x,other.y+36,"Grounded: "+string(grounded));
        draw_text(other.x,other.y+48,"Air Hit: "+string(airHit));
        draw_text(other.x,other.y+60,"Life: "+string(life));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
