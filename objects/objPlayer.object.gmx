<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMordIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 0.3;
vSpeed = 0;
hSpeed = 0;
movSpeed = 3.5;
jumpSpeed = 5;
dir = -1;
hit = 0;
image_speed = 0.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Inputs
keyLeft = keyboard_check(vk_left);
keyRight = keyboard_check(vk_right);
keyJump = keyboard_check(vk_up);

//cancelar input
if(hit &gt; 0){
    keyLeft = 0;
    keyRight = 0;
}

//Gravedad
if (vSpeed &lt; 10)
    vSpeed += grav;

//Movimiento
move = keyRight - keyLeft;

//si no ha sido golpeado -&gt; se mueve
if(hit == 0){
    hSpeed = move * movSpeed;
}

//Hit -&gt; resetea el contador de golpeo
if(hit &gt; 0){
    hit -= (1/room_speed);
}

//Salto
if (place_meeting(x, y + 1, objBlock))
{
    vSpeed = keyJump * -jumpSpeed;
}

//Colisiones
if (place_meeting(x + hSpeed, y, objBlock))
{
    while !(place_meeting(x + sign(hSpeed), y, objBlock))
    {
        x += sign(hSpeed);
    }
    hSpeed = 0;
}
//x += hSpeed;

if (place_meeting(x, y + vSpeed, objBlock))
{
    while !(place_meeting(x, y + sign(vSpeed), objBlock))
    {
        y += sign(vSpeed);
    }
    vSpeed = 0;
}

//Knockback
if(place_meeting(x + hSpeed, y, objEnemyTest) &amp;&amp; hit == 0){
    hSpeed = -sign(hSpeed)*4;
    vSpeed = -4;
    hit = 0.4;
    //hSpeed = 0;
}

x += hSpeed;
y += vSpeed;

//Direcci√≥n
if(move != 0 &amp;&amp; move != dir){
    dir = move;
    if(dir &gt; 0){
        image_xscale = -1;
    }
    else{
        image_xscale = 1;
    }
}

//Golpe
if(keyboard_check_pressed(ord('Z'))){
    sprite_index = sprMordKick;
    
    with(instance_create(x,y,objKickHbox)){
        image_xscale = other.image_xscale;
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index == sprMordKick){
    sprite_index = sprMordIdle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
